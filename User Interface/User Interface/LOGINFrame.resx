<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="pictureBox1.GenerateMember" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>False</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        xMTE/wE2vuCBTJiC5wAAAABJRU5ErkJggg==
</value>
  </data>
</root>